 ============================================================================
 Name        : LabAssignment6.md
 Author      : Mr.Aditya Korade(43489)
 Date        : 01/11/2020
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================

 “sales” database:
    1. Write a query that counts the number of salespeople registering orders for eachday. (If a salesperson
    has more than one order on a given day, he or she should be counted only once.).
    ->  
        select odate,count(DISTINCT snum) from orders group by odate;

    2. Write a query on the Customers table that will find the highest rating in each city. Put the output in this
    form: For the city (city), the highest rating is : (rating).
    ->method 1:
        select city, max(rating) rating from customers group by city;
      method 2:
        SELECT CONCAT('for the ', city  ,' highest rating is ',
        MAX(rating) ) AS HIGHEST_RATING_PER_CITY
        FROM customers
        GROUP BY city; 

    
    3. Write a query that totals the orders for each day and places the results in descending order.
    ->
        select odate, count(onum) totals_order from orders group by odate order by totals_order desc;

    4. Write a query that selects the total amount in orders for each salesperson for whom this total is greater
    than the amount of the largest order in the table.
    ->
        select snum, sum(amt) Total_amt,max(amt) MaxOrder from orders group by snum having Total_amt>max(amt) order by Total_amt;

    5. Write a query that selects the highest rating in each city.
    ->method 1:
            select city,max(rating) from customers group by city;
    
    6. Largest order taken by each salesperson with order value more than Rs.3000.
    ->
        select snum, max(amt) MAx from orders group by snum having max>3000 order by max;

    7. Select each customer smallest order.
    ->
        select cnum,min(amt) from orders group by cnum; 

 “hr” database:
    use hr;
    select user(), database();

    1. Display manager ID and number of employees managed by the manager.
     ->
        select ifnull(MANAGER_ID,0), count(EMPLOYEE_ID) from employees group by manager_id;

    2. Display the country ID and number of cities we have in the country.
    ->
         select replace(country_id,'"','NO country_id'),count(city) from locations group by country_id;

    3. Display average salary of employees in each department who have commission percentage.
    ->
        select ifnull(DEPARTMENT_ID,0) DEPARTMENT_ID, avg(salary) from employees group by DEPARTMENT_ID;

    4. Display job ID, number of employees, sum of salary, and difference between highest salary and lowest
    salary of the employees of the job.
    ->
        select job_id,count(EMPLOYEE_ID) 'Number of employees',sum(salary),max(salary)-min(salary) differance from employees group by job_id;
    
    5. Display job ID for jobs with average salary more than 10000.
    ->
        select job_id, avg(salary) Avg from employees group by job_id having Avg>10000;

    6. Display years in which more than 10 employees joined.
    ->
        select YEAR(hire_date) Years, count(EMPLOYEE_ID) Count from employees group by years having Count>10;

    7. Display departments in which more than five employees have commission percentage.
    ->
        select ifnull(department_id,0), count(commission_pct) as commission_more_than5 from employees group by department_id having commission_more_than5>5;
    8. Display employee ID for employees who did more than one job in the past.
    ->
        select EMPLOYEE_ID, count(Job_id) Count from job_history group by employee_id having Count>1;
        
    9. Display job ID of jobs that were done by more than 3 employees for more than 100 days.
    -> 
        select job_id, count(employee_id) Count from employees where DATEDIFF(NOW(), hire_date)>100 group by job_id having Count>3;
    
    10. Display department ID, year, and Number of employees joined.
    ->
        select department_id,year(hire_date) Years, count(employee_id) from employees group by department_id,Years;
    
    11. Display how many employees joined in each month of the current year.
    ->
        SELECT month(hire_date) Months,count(employee_id) from employees where year(hire_date)=year(now()) group by months; 
    
    12. Display details of departments in which the maximum salary is more than 10000.
    ->
        SELECT ifnull(DEPARTMENT_ID,0) Department, MAX(salary) FROM Employees GROUP BY Department HAVING MAX(salary) > 10000;
 
 “dacdb” database “emp” table: 
 use dacdb;
 select user(), database();
    1. Print the employee to whom maximum number of employee reports.
    ->
        SELECT mgr,COUNT(ename)     FROM emp     GROUP BY mgr     ORDER BY COUNT(ename)     DESC LIMIT 1;

    2. Print the total number of employees not reporting to MANAGER and PRESIDENT.
    ->
        select count(ifnull(mgr,0)) 
        Total_Number_of_Employee_not_reporting_to_manager_or_President 
        from emp 
        where 
        (mgr not in (7566,7698,7782,7839) or mgr is null);
    
    3. Print the number of CLERK in each department.
    ->
        select deptno, count(job) count from emp where job='clerk' group by deptno;

    4. Print the years for which recruited emp salary average is above 2000.0.
    ->
        select year(hire) year, avg(sal)  from emp group by year having  avg(sal)>2000.0;

    5. Print employees recruited per month in sorted order of count. If
    count is same, then follow alphabetical order of month name.
    ->
        select monthname(hire) month, count(ename) count from emp group by month order by count,month;
    
    6. Count the number of employees getting commission and not getting
    commission.
    ->
        select
        case
        when comm>0 then 'comm'
        else
        'not comm'
        end 'Category', count(*)
        from emp
        group by category;

    7. Print number of employees hired on each day (other than weekend)
    in descending order.
    ->
        select dayname(hire), count(ename) from emp where (dayname(hire)!='saturday' and dayname(hire)!= 'sunday') group by dayname(hire) order by count(ename) desc;