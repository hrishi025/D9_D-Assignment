## Module: Database-Technology
# Assignment No. 09 Date: 08/11/2020

-- Login as edac user
cmd> mysql -u edac -p
password: ****

-- Show All the Databases
SHOW DATABASES;

-- Activate Sales Database
USE Sales;

-- Check which user and database is currently in use
SELECT USER(), DATABASE();


1. Write a query that uses a subquery to obtain all orders for the customer named Cisneros. Assume you do not know his customer number (cnum).

SELECT *
FROM orders
WHERE cnum = (SELECT cnum FROM customers WHERE cname = 'Cisneros');


2. Write a query that produces the names and ratings of all customers who have above-average orders.

SELECT c.cname, c.rating
FROM customers c
WHERE c.cnum = ANY(SELECT o.cnum FROM orders o GROUP BY o.cnum HAVING SUM(o.amt) > (SELECT AVG(amt) FROM orders));

SELECT cname,rating FROM customers
WHERE cnum = ANY( SELECT DISTINCT cnum FROM orders WHERE amt>(SELECT AVG(amt) FROM orders) );


3. Write a query that selects the total amount in orders for each salesperson for whomthis total is greater than the amount of the largest order in the table.

SELECT o.snum, SUM(o.amt) FROM orders o
GROUP BY o.snum
HAVING SUM(o.amt) > (SELECT MAX(o.amt) FROM orders o);


-- SELECT s.sname, SUM(o.amt) FROM salespeople s
-- INNER JOIN orders o ON o.snum = s.snum
-- GROUP BY s.sname
-- HAVING SUM(o.amt) > MAX(o.amt)
-- ORDER BY 2 DESC
-- LIMIT 1;


4. Write a query that selects all customers whose ratings are equal to or greater than ANY of Serres’.

SELECT c.* FROM customers c
WHERE c.rating >= ANY(SELECT rating FROM customers c WHERE snum IN
(SELECT snum FROM salespeople s WHERE s.sname ='serres'));


5. Write a query using ANY or ALL that will find all salespeople who have no customers located in their city.

SELECT snum, sname
FROM salespeople
WHERE (snum, city) != ALL (SELECT snum, city FROM customers);


6. Write a query that selects all orders for amounts greater than any for the customers in London.

SELECT o.* FROM orders o
WHERE o.amt > ANY (SELECT amt FROM orders WHERE cnum IN (SELECT cnum FROM customers WHERE city = 'London'));


7. Extract all the orders of Motika.

SELECT * FROM orders
WHERE snum = (SELECT snum FROM salespeople WHERE sname = 'Motika');

8. Find all the order attribute to salespeople servicing customers in London.

SELECT * FROM orders
WHERE snum = ANY(SELECT snum FROM customers WHERE city = 'London');


9. Find names and numbers of all salesperson who have more than one customer.

SELECT s.sname, s.snum FROM salespeople s
HAVING 1 < (SELECT COUNT(*) FROM customers c WHERE c.snum = s.snum);


10. Find salespeople number,name and city who have multiple customers.

SELECT s.sname, s.snum, s.city FROM salespeople s
HAVING 1 < (SELECT COUNT(*) FROM customers c WHERE c.snum = s.snum);


11. Select customers who have a greater rating than any other customer in Rome.

SELECT * FROM customers
WHERE rating > ALL(SELECT rating FROM customers WHERE city = 'Rome');

12. Select all orders that had amounts that were greater that atleast one of the orders fron ‘1990-10-04’ .

SELECT * FROM orders
WHERE amt > ANY(SELECT amt FROM orders WHERE odate = '1990-10-04');


13. Find all orders with amounts smaller than any amount for a customer in San Jose.

SELECT * FROM orders
WHERE amt < ANY(SELECT amt FROM orders WHERE cnum = ANY(SELECT cnum FROM customers WHERE city = 'San Jose'));


14. Select those customers whose rating are higher than every customer in Paris.

SELECT * FROM customers
WHERE rating > ALL(SELECT rating FROM customers WHERE city = 'Rome');